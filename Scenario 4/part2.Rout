
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> 
> #Below this should be another job (part2) after the array jobs finish running
> #set empty matrix
> # SET IT HERE
> setwd("/home/herashi/MRT/indirect_effect/100_25")
> MASTERLIST =list.files(pattern="^fity")
> 
> out <- NULL
> 
> for (i in 1:length(MASTERLIST)){
+   load(file= MASTERLIST[i])
+   out <-rbind(out, cbind(level = paste("$\\beta_{11}^* = ", 0.2, "$", sep = ""), omit))
+ }
> 
> print(length(MASTERLIST))
[1] 1000
> 
> ## 95% CI coverage probability using uncorrected SEs
> out$cp <- with(out, lcl <= -0.1 & -0.1 <= ucl)
> ## coverage probability using SEs corrected for estimates in weights
> out$cpc <- with(out, lclc <= -0.1 & -0.1 <= uclc)
> ## root MSE
> out$rmse <- with(out, (estc - (-0.1))^2)
> 
> 
> ## mean and SD estimate, number of replicates
> out <- cbind(aggregate(cbind(est,estc, se, sec, cp, cpc, rmse,lclc, uclc) ~
+                          method + moderator +  n + tmax,
+                        data = out, FUN = mean),
+              sd = aggregate(estc ~ method + moderator + n + tmax,
+                             data = out, FUN= sd)$estc)
> #iter = aggregate(iter ~ method + moderator  + n + tmax,
> #                data = out,
> #               FUN = function(x) length(unique(x)))$iter)
> out$rmse <- sqrt(out$rmse)
> 
> save(out,file = "test.RData")
> 
> 
> proc.time()
   user  system elapsed 
  0.846   0.156   2.269 
